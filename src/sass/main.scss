@import "variables";
@import "../css/material-icons.css";
.mdi {
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    /* Preferred icon size */
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    /* Support for all WebKit browsers. */
    -webkit-font-smoothing: antialiased;
    /* Support for Safari and Chrome. */
    text-rendering: optimizeLegibility;
    /* Support for Firefox. */
    -moz-osx-font-smoothing: grayscale;
    /* Support for IE. */
    font-feature-settings: 'liga';
}

body {
    padding-top: 2.4rem;
}

.hide {
    display: none;
}

.app-brand {
    color: $primary-color;
    left: 1.5rem;
    position: fixed;
    top: .85rem;
    .app-logo {
        align-items: center;
        border-radius: $border-radius;
        display: inline-flex;
        height: 2rem;
        padding: .2rem;
        width: auto;
        &:focus,
        &:hover {
            text-decoration: none;
        }
        img {
            display: inline;
            height: auto;
            width: 1.6rem;
        }
        h2 {
            display: inline;
            font-size: .9rem;
            font-weight: 500;
            margin-bottom: 0;
            margin-left: .5rem;
            margin-right: .5rem;
        }
    }
}

@media (max-width: 960px) {
    .off-canvas {
        .off-canvas-toggle {
            z-index: $zindex-3;
        }
    }
    .app-sidebar {
        .app-brand {
            margin: .85rem 1.5rem;
            padding: 0;
            position: static;
        }
    }
}

@media (min-width: 960px) {
    .off-canvas {
        .off-canvas-sidebar {
            height: calc(100vh - 2.4rem);
        }
    }
}

@import "../../node_modules/sass-material-colors/sass/sass-material-colors-classes";
@import "../../node_modules/sass-material-colors/sass/sass-material-colors-map";
@each $color-name,
$color-variants in $material-colors {
    @each $color-variant,
    $hex-value in $color-variants {
        .btn-link.color-#{$color-name}-#{$color-variant} {
            color: #{$hex-value};
            &:focus,
            &:hover,
            &:active,
            &.active {
                color: darken($hex-value, 5%);
            }
        }
        .color-i-#{$color-name}-#{$color-variant} {
            color: #{$hex-value} !important;
        }
        .btn-link.bg-color-#{$color-name}-#{$color-variant} {
            background: #{$hex-value};
            border-color: transparent;
        }
        .bg-color-i-#{$color-name}-#{$color-variant} {
            background-color: #{$hex-value} !important;
        }
    }
}

.bg-color-black {
    color: #000000;
}

.color-black {
    color: #000000;
}

.bg-color-white {
    color: #FFFFFF;
}

.color-white {
    color: #FFFFFF;
}

.btn-link {
    &.bg-color-black {
        color: #000000;
    }
    &.color-black {
        color: #000000;
    }
    &.bg-color-white {
        color: #FFFFFF;
    }
    &.color-white {
        color: #FFFFFF;
    }
}

$s: 240px;
.grid {
    max-width: $s * 6;
    width: 100%;
    margin: 0 auto;
    margin-top: .4rem;
}

.grid-item {
    float: left;
    // width: 16.66666667%;
    width: 240px;
    position: relative;
    max-height: calc(100px * 5);
    .card-body {
        // min-height: 68px;
        max-height: calc(500px - 94px - 70px);
    }
}

@for $i from 1 through 3 {
    @media (min-width: $s * $i + 20px) {
        .grid {
            width: $s * $i;
        }
    }
}

@for $i from 4 through 7 {
    @media (min-width: $s * $i + 20px) {
        .grid {
            width: $s * ($i - 1);
        }
    }
}

@media (max-width: $s * 2.5) {
    .grid {
        width: 100%;
    }
    .grid-item {
        width: 100%;
    }
}